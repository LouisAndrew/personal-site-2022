---
import Drawer from "@/components/common/Drawer/Drawer.svelte";
import Header from "@/components/common/Header.svelte";
import Navbar from "@/components/common/Navbar.svelte";
import Theme from "@/components/common/Theme.svelte";
import { agent } from "@/utils/agent";
export interface Props {
  title: string;
}

const { title } = Astro.props;

const { avatarUrl } = await agent
  .get(`${Astro.url.origin}/api/avatar`)
  .json<{ avatarUrl: string }>();
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@200;300;400&family=Sora:wght@300;500;700&display=swap"
      rel="stylesheet"
    />
    <meta
      name="viewport"
      content="width=device-width, height=device-height, initial-scale=1.0, viewport-fit=cover"
    />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />
    <meta id="theme-color" name="theme-color" content="#ff8000" />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <style lang="postcss" is:global>
      @tailwind base;
      @tailwind components;
      @tailwind utilities;

      @layer base {
        * {
          @apply duration-100;
        }

        main {
          @apply text-gray-900 dark:text-slate-300 font-sora font-light text-base w-[100vw] min-h-screen
                flex justify-center overflow-x-hidden tracking-wide;
        }

        h1 {
          @apply text-4xl font-sans font-extralight dark:text-white mb-12;
        }

        h2 {
          @apply text-3xl font-sans font-extralight dark:text-white mb-2;
        }

        h3 {
          @apply text-xl font-bold font-sora text-zinc-600 dark:text-slate-100 mt-6;
        }

        h4 {
          @apply mt-5 mb-0.5 font-sora text-lg font-medium;
        }

        ul {
          @apply pl-6 list-disc;

          & ul {
            @apply list-square;
          }

          p {
            @apply !p-0;
          }
        }

        li {
          @apply first:pt-1;
        }

        p {
          @apply py-2;
        }

        code,
        pre {
          @apply px-2 py-1 bg-gray-100 dark:bg-gray-900 text-xs rounded overflow-hidden;
        }
      }

      @layer components {
        .highlight {
          @apply relative flex items-center w-max text-sm rounded-sm overflow-hidden px-2 py-1;

          background-image: linear-gradient(
            to right,
            theme("colors.red.300"),
            theme("colors.blue.500") 50%,
            transparent 50%
          );
          background-size: 220% 100%;
          background-position: 100%;
          transition: all 0.3s ease-in-out;

          &:hover {
            @apply dark:text-black;
            background-position: 0;
          }
          svg {
            @apply !h-6 !w-6 first:mr-3;
          }
        }

        .details {
          a {
            @apply duration-200 text-yellow-600 hover:text-yellow-500 dark:text-yellow-100 hover:dark:text-yellow-300;
          }

          img {
            @apply py-2 overflow-hidden;
          }
        }

        .navbar {
          @apply grid-cols-1;
          @screen md {
            grid-template-columns: repeat(3, auto);
          }
        }
      }

      #toggle {
        @apply h-6 w-6 fill-gray-900 dark:fill-slate-300;

        #top,
        #bot {
          @apply duration-300;
        }

        #mid {
          @apply duration-500;
        }
      }

      [data-open="true"] #toggle {
        #top {
          transform: rotate(45deg) scale(1.2) translate(10%, -10%);
        }
        #mid {
          opacity: 0;
        }
        #bot {
          transform: rotate(-45deg) scale(1.2) translate(-60%, -20%);
        }
      }

      .drawer {
        .navbar {
          @apply opacity-0 duration-500 delay-150;
        }
      }

      .drawer.open {
        .navbar {
          @apply opacity-100;
        }
      }
    </style>
  </head>
  <body>
    <main class="bg-white dark:bg-zinc-800 relative">
      <div
        class="w-full md:max-w-2xl lg:max-w-4xl xl:max-w-7xl py-12 px-8 overflow-x-hidden"
      >
        <Header avatarUrl={avatarUrl}>
          <Navbar class="hidden md:grid">
            <Theme client:only="svelte" />
          </Navbar>
          <Drawer client:only>
            <Navbar>
              <Theme client:only="svelte" />
            </Navbar>
          </Drawer>
        </Header>
        <slot />
      </div>
    </main>
  </body>
</html>
